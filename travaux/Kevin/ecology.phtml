<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<title>Palette Ecology of Mind</title>
	    <script type="text/javascript" src="../../js/d3.js"></script>
	    <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
	    <script type="text/javascript" src="../../js/queue.v1.min.js" ></script>
		<script type="text/javascript">

		var ficSVG = "../../svg/paletteecologyofmind.svg";

		var dataProfil;

		var hauteurs = [];
		var colors = [];
		
		var arrIds = [
		      			{"idEle":"circle-haut","fonction":changerTemperature,"params":[{"mes":"coucou"}]}
		      		];
		
		function load(){
		 	//charge l'IHM SVG
		    //merci à http://bl.ocks.org/KoGor/8162640
		    	queue()
		    		.defer(d3.xml, ficSVG, "image/svg+xml")
		    		.await(IHMcharge);
		    //	chargeData(ficCSV);
		}
		
	    function IHMcharge(error, xml){
	    		//Adding our svg file to HTML document
			var importedNode = document.importNode(xml.documentElement, true);
    	  		d3.select("#viz").node().appendChild(importedNode);	    	    	  	

    	  		setGraph();
    	  		
    	  		ajouteEvent();
	    }		
	    
		// fonction pour ajouter un écouteur à UN ÉLÉMENT
		//merci à https://developer.mozilla.org/fr/docs/DOM/element.addEventListener
		function ajouteEvent() { 
		
			for (var i = 0; i < arrIds.length; i++) {
			     var svg = d3.select("#"+arrIds[i].idEle)
			     			 .on("click", changerTemperature);
			}
		}

		function chargeData(){
			alert("toto");	
		}

		function sauveSVG(){
			var svg = document.getElementById("viz").firstChild;
			svg = svg.outerHTML;
			var p = {"svg":svg,"titre":"mon beau svg","url":ficSVG};
			$.post("explo/sauvesvg", p,
					 function(data){
						alert(data);
					 });
			
		}

		//https://gist.github.com/lrvick/2080648
		// convert 0..255 R,G,B values to a hexidecimal color string
		RGBToHex = function(r,g,b){
		    var bin = r << 16 | g << 8 | b;
		    return (function(h){
		        return new Array(7-h.length).join("0")+h
		    })(bin.toString(16).toUpperCase())
		}
		
		function changerTemperature(){
			
			var x_decalage = this.getBBox().x;
			var y_decalage = this.getBBox().y;

			var x_centre = this.getBBox().width / 2;
			var y_centre = this.getBBox().height / 2;
			
			var x_click = d3.mouse(this)[0] - x_decalage;
			var y_click = d3.mouse(this)[1] - y_decalage;

			var dist_x_centre = x_click - x_centre;
			var dist_y_centre = y_click - y_centre;
			
			var dist_centre = Math.sqrt(Math.pow(dist_x_centre, 2) + Math.pow(dist_y_centre, 2));

			var cos = dist_x_centre/dist_centre;
			var sin = -dist_y_centre/dist_centre;

			
			var r_color = 192 + cos * 50;
			var g_color = 192 + cos * 50;
			var b_color = 128 + sin * 50;	

			var color = RGBToHex(r_color, g_color, b_color);
			
			var h_variation = cos * 90;
			var hauteur = 95.62735 + h_variation;

			
			d3.select("#circle21092")
				.transition()
				.duration(1500)
				.style("fill", "#"+color);
			d3.select("#rect21094")
				.transition()
				.duration(1500)
				.attr("height", hauteur)
				.attr("y", 318.54865 - h_variation)
				.style("fill", "#"+color);

			if(hauteur < 25){
				d3.select("#t1")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
				d3.select("#t2")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
				d3.select("#t3")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
				d3.select("#t4")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
				d3.select("#t5")
				.transition()
				.duration(1500)
				.style("fill-opacity", 1);
			}

			else if(hauteur < 70){
				d3.select("#t1")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
				d3.select("#t2")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
				d3.select("#t3")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
				d3.select("#t4")
				.transition()
				.duration(1500)
				.style("fill-opacity", 1);
				d3.select("#t5")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
			}

			else if(hauteur < 120){
				d3.select("#t1")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
				d3.select("#t2")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
				d3.select("#t3")
				.transition()
				.duration(1500)
				.style("fill-opacity", 1);
				d3.select("#t4")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
				d3.select("#t5")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
			}

			else if(hauteur < 165){
				d3.select("#t1")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
				d3.select("#t2")
				.transition()
				.duration(1500)
				.style("fill-opacity", 1);
				d3.select("#t3")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
				d3.select("#t4")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
				d3.select("#t5")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
			}

			else{
				d3.select("#t1")
				.transition()
				.duration(1500)
				.style("fill-opacity", 1);
				d3.select("#t2")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
				d3.select("#t3")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
				d3.select("#t4")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
				d3.select("#t5")
				.transition()
				.duration(1500)
				.style("fill-opacity", 0);
			}

			hauteurs[hauteurs.length] = (1 + cos) * 50 + 10;
			colors[colors.length] = color;
			resetGraph();
		}
	    
		function getElementArr(arr, prop, val){
			for (var i = 0; i < arr.length; i++) {
				if(arr[i][prop]==val)return arr[i];
			}
			return false;
		}



		function setGraph(){
		}
		
		function resetGraph(){
			var largeur = 800 / hauteurs.length;
			
			for(var i = 0; i < hauteurs.length-1; i++){
				d3.select("#bar"+i)
					.transition()
					.duration(1500)
					.attr("height", hauteurs[i])
					.attr("y", 590 - hauteurs[i]) //ok
					.attr("width", largeur)
					.attr("x", largeur * i);
			}

			d3.select("svg")
				.append("rect")
				.attr("id", "bar" + hauteurs.length)
				.attr("y", 590 - hauteurs[i]) //ok
				.attr("x", largeur * hauteurs.length)
				.attr("height", hauteurs[i])
				.attr("width", largeur)
				.style("fill", "#"+colors[i]);
		}
		
		</script>
	</head>
	<body onload="load();">
		<div onclick="sauveSVG();" >Sauve SVG</div>
		<div id="viz" ></div>
	</body>
</html>